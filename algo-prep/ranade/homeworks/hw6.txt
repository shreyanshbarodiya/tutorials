Due Sunday March 6, 8pm.  Submissions will be accepted until midnight;
however no extension will be given if you submit at midnight and
cannot do so for some reason.

Solve problem 1 of quiz 2.


Suppose you are travelling from Mumbai to Delhi in an electric car
which has a battery that can hold one Coulomb of charge on which it
can run 100 km.  You start with your car fully charged.  You are given
numbers D[1..n] and P[1..n] where D[i] denotes the distance of
the ith charging station from Mumbai, and P[i] the charging price
per Coulomb at the ith charging station.  If your battery currently
holds x coulombs, you may buy any amount of charge between 0 and
1-x coulombs.

Give an algorithm to decide where you will buy the charge, and how
much you will buy so as to minimize your total expense.  You can
assume that D[i] are given in increasing order, and that there are
sufficiently many charging stations that it is possible to make the
journey without running out of charge.

Input: given as n D[1] P[1] D[2] P[2] ... D[n] P[n]

Assume that D[n] = distance from Mumbai to Delhi.  P[n] is then
irrelevant; but assume it is also given for simplicity.

Output:

C Q[1] Q[2] ... Q[n]

where C is the total cost paid by your algorithm, and Q[i] is the
quantity bought at station i.  

Use double numeric type for distances, prices, cost and quantities.

Your main algorithm must be recursive.  You may choose to make the
arrays global; but other than those, do not have global variables.
